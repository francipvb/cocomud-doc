h1. Quoi de neuf dans les récents builds

Cette page décrit les changements apportés par chaque build. Vous pouvez naviguer entre builds en utilisant la navigation par titre.

h2. Build 47

* Vous pouvez simplement exporter un univers dans un fichier ZIP, en choisissant quoi exporter (*Fichier* -> *Exporter cet univers*). Vous pouvez ensuite partager ce fichier ZIP avec d'autres utilisateurs qui pourront l'importer depuis *Fichier* -> *Importer un univers* (#86).
* CocoMUD gère mieux le contenu du presse-papier, en particulier sous Linux (#106).  Une case à cocher a été ajoutée dans les options pour désactiver l'envoi automatique du texte quand on colle depuis le presse-papier (#91).
* CocoMUD supporte et affiche les fichiers au format *WAV* et *OGG* pour jouer des sons (#112).
* Le rich-text a été désactivé par défaut pour offrir une expérience utilisateur plus fluide pour les nouveaux utilisateurs (#114).
* Plusieurs améliorations et corrections de bug pour Linux (#105, #106).
* CocoMUD ouvre et enregistre les préférences utilisateurs convenablement même si la langue de l'utilisateur n'est pas supportée par le client (#108).
* Importer un univers depuis le site web ne génère plus d'erreur d'encodage (#117).
* CocoMUD affiche à présent le texte utilisant une police de caractère plus agréable (merci encore aux contributeurs voyants).
* Note : pour des raisons de compatibilité, l'encodage des fichiers de configuration a été modifié. CocoMUD devrait supporter les anciens fichiers de configuration et les convertir à l'ouverture, mais il est possible que certaines erreurs surviennent avec des fichiers contenant de nombreux caractères spéciaux.

h2. Build 46

* Les commandes multiples fonctionnent de nouveau et sont à présent systématiquement testées (#98).
* Les commandes multiples supportent maintenant les caractères spéciaux (#99).
* CocoMUD gère mieux les variables dont les valeurs contiennent des caractères spéciaux(#93).

h2. Build 45

* CocoMUD ne fait plus planter le lecteur d'écran en bloquant la fenêtre (#96).
* CocoMUD supporte maintenant le protocole SSL, permettant de crypter la connexion telnet (#94).
  SSL n'est pas proposé par tous les jeux, et est configuré sur un port différent du protocole telnet.
* Ajoute une option dans la barre de menu pour désactiver tous les sons du client comme ceux générés par des triggers (#89).

h2. Build 44

* Ajoute une action SharpScript pour répéter la dernière commande entrée (#85) :
  Cette action, appelée @#repeat@, peut être utilisée pour répéter la dernière commande entrée ou envoyer une commande plusieurs fois.
* Quand un raccourci associé à un macro est utilisé, le curseur va automatiquement en bas de la fenêtre  (#80).
* Corrige plusieurs conflits quand un univers était ouvert plusieurs fois dans différents onglets (#90).

h2. Build 43

* Ajout d'une page de documentation pour [[Download|télécharger et installer CocoMUD]].
* Ajout de raccourcis clavier pour ajouter, éditer ou supprimer dans toutes les boîtes de dialogue (#87).

h2. Build 42

* Ajoute les triggers avec substitution (#79) :
  Les triggers peuvent maintenant remplacer une ou plusieurs lignes directement dans le client, quand ils s'exécutent.
* Mise à jour des couleurs et du style de la fenêtre en mode rich-text.
* Corrige un bug avec le curseur instable quand plusieurs onglets sont ouverts (#53).

h2. Build 41

* Ajout des personnages par défaut (#77) :
  Dans la boîte de dialogue pour configurer un personnage, on peut maintenant préciser si ce personnage doit être chargé par défaut. Si oui, à la connexion, en choisissant un univers dans la liste, CocoMUD sélectionne automatiquement ce personnage. Cela permet de gagner du temps si l'on se connecte souvent au même personnage d'un univers, et n'empêche pas de se connecter à d'autres.
* Quand on crée un personnage avec des caractères spéciaux (comme des lettres accentuées), CocoMUD ne plante plus au démarrage (#78).
  Un merci tout particulier au contributeur qui a signalé ce bug sur le site (#76).
* Quand CocoMUD perd la connexion au serveur, il essaye de se reconnecter, entrant le nom d'utilisateur / mot de passe si configuré pour (#67) :
  Cette correction n'est pas parfaite, il est difficile de gérer les erreurs de connexion.
* Quand aucune mise à jour n'est disponible, le message s'affiche correctement (#75).

h2. Build 40

* Ajoute une option pour désactiver le "rich text" dans le client (#82).
  Cette option se trouve dans le menu *Fichier* -> *Options*, onglet *Accessibilité*. Désactiver le "rich text" est parfois utile pour l'accessibilité, bien que cela retire toute couleur du client.
* Créer un univers et fermer la boîte de dialogue ne crée plus d'erreur (#69).
  Un merci tout particulier au testeur qui a reporté ce bug (#68).
* Corrige un bug quand on ferme tous les onglets de CocoMUD.

h2. Build 39

* Ajoute un bouton pour importer un univers depuis l'écran de connexion (#60):
  Il est désorlmais possible d'importer un univers avant de se connecter (ce qui est assez logique la plupart du temps). Cliquez simplement sur le bouton *Importer* sur l'écran de connexion, et choisissez si vous désirez importer l'univers depuis un fichier ou depuis le site Web.
* Affiche une boîte de dialogue pour confirmer que l'installation d'un univers s'est bien déroulée (#63).
* Installer un univers avec canaux n'ouvre plus de boîtes de dialogues secondaires (#81).
* Redémarrer CocoMUD après avoir installé un univers n'est plus nécessaire.

h2. Build 38

* Ajout de bloc-notes pour chaque univers et chaque personnage (#62):
  CocoMUD permet désormais d'accéder à des bloc-notes indépendants, des fichiers de texte que vous pouvez utiliser pour conserver certains points de repère, des informations de quête ou autre. Il y a un bloc-notes différent pour chaque univers, que vous pouvez ouvrir via la barre de menu -> *Jeu* -> *Bloc-notes* -> *Pour cet univers...*. Vous pouvez écrire du texte dans ce bloc-notes, appuyer sur échappe pour le fermer et l'enregistrer. Le second bloc-notes fonctionne selon le même principe, et est accessible via la barre de menu *Jeu* -> *Bloc-notes* -> *Pour ce personnage...*. Ce second bloc-notes ne sera pas partagé entre les personnages de cet univers.
* Ajoute une documentation pour les [[Macros|macros]].
* Ajoute les triggers marqués dans la boîte de dialogue des triggers (#30).
* Autorise les triggers sans action, particulièrement utile pour les triggers marqués.
* Corrige plusieurs bugs d'affichage dans l'interface.

h2. Build 37

* Ajout une fonctionnalité pour créer des personnages (#61) :
  On peut désormais configurer un univers avec plusieurs personnages. Un personnage possède des informations de configuration plus spécifiques (comme des alias, macros ou triggers qui lui sont propres), mais il possède surtout des informations de connexion (un nom d'utilisateur et mot de passe, par exemple). Ces informations sont conservées dans un fichier crypté.
  Pour créer un nouveau personnage, dans la boîte de dialogue de connexion, sélectionnez l'univers auquel vous souhaitez vous connecer, puis faites Tab pour voir la liste des personnages associés à cet univers. Par défaut, il ne devrait y en avoir qu'un seul, appelé "aucun". Validez sur ce personnage (ou cliquez sur le bouton *se connecter*). CocoMUD vous connecte à un univers sans personnage. Pour créer un personnage, rendez-vous dans la barre de menu, *jeu* -> *Changer les options de ce personnage...*. Précisez dans cette boîte de dialogue le nom du personnage. Vous pouvez préciser les commandes à entrer avant le mot de passe (généralement un nom d'utilisateur), le mot de passe-même et les commandes à entrer après le mot de passe (si il y en). Cliquez sur *OK* pour sauvegarder le personnage dans un fichier crypté. À la prochaine connexion, vous verrez ce personnage dans la liste (choisissez l'univers, faites Tab pour vous retrouver dans la liste des personnages associées à cet univers). Les commandes que vous avez entrées dans la boîte de dialogue seront envoyées au serveur de jeu dès l'ouverture de la session, pour vous connecter plus rapidement. Elles seront de nouveau envoyées si vous souhaitez vous reconnecter.
* Corrige un bug empêchant de créer un univers (#66).
* Ajout de la boîte de dialogue en cas de crash :
  Cette boîte de dialogue apparaît quand une erreur imprévue survient dans le client. Elle vous donne plus d'informations sur l'origine du bug, ainsi que des explications sur la façon de rapporter ce bug à l'équipe des développeurs.

h2. Build 36

* Ajoute les triggers marqués (#30).
  Une marque peut être placée sur un trigger, ce qui déplace le curseur automatiquement sur la ligne reçue ayant déclenché le trigger. Cela peut être utile quand vous recevez un nouveau message, si un trigger y est associé. Cela peut aussi être utile pendant l'exploration, pour déplacer directement le curseur sur la liste des sorties, par exemple.
* Met à jour la fenêtre visuellement pour essayer de la rendre plus agréable.
* Ajoute la gestion des couleurs ANSI dans le client (#65).

h2. Build 35

* Ajoute la fonctionnalité pour importer un univers depuis un fichier, ou depuis Internet (#60).
  Dans le menu *fichier*, il y a un nouveau menu "importer un univers". Dedans se trouve deux sous-menus : le premier sert à importer un univers depuis un fichier, le second depuis Internet. Ce dernier regardera les univers configurés sur le site web du projet. Vous pourrez télécharger l'un d'entre eux depuis cette interface.

h2. Build 34

* Ajoute un système de canaux (#50):
Les canaux sont utiles pour surveiller plusieurs évènements. Ils sont surtout utiles pour conserver les messages de canaux de communication sur un jeu. Grâce au système de triggers, il est possible d'envoyer les messages à un canal spécifique. Grâce aux macros ou alias, il est possible d'afficher cette liste dans une boîte de dialogue séparée.
* Dans les préférences, onglet *accessibilité*, il est maintenant possible de configurer l'interruption du TTS si de nouveaux messages arrivent pendant la lecture (#40).
* Quand les options du TTS sont modifiées dans les préférences, les changements sont appliqués instantanément (#55).
* Corrige quelques bugs dans le moteur SharpScript.

h2. Build 33

* Les alias/macros/triggers décrits sur plusieurs lignes marchent de nouveau (#63).
* On peut maintenant écrire des instructions SharpScript dans des macros (#59).
* Les variables sont à présent expliquées dans [[Alias|la documentation des alias]].
* Le titre de la fenêtre quand plusieurs onglets sont ouverts est mis à jour correctement (#51).

h2. Build 32

* Ajoute une syntaxe pour écrire des variables en SharpScript.
  La syntaxe est @$variable@.  Les variables ont été ajoutées aux alias (#45) et aux triggers (#44).
* Corrige un bug mineur dans les commandes multiples.
* Ajoute les triggers muets, très utiles pour sonoriser un prompt.

h2. Build 31

* Améliore le système de logging.
* Met à jour les catalogues utilisés pour la traduction (#41).

h2. Build 30

* Ajout d'un système de logging pour débug les évènements automatiques.

h2. Build 29

* Corrige un bug des triggers sonores quand plusieurs univers sont ouverts en même temps (#48).

h2. Build 28

* Ajout des [[CommandStacking|commandes multiples]] (command stacking en anglais), pour envoyer plusieurs commandes à la fois, en utilisant le point virgule ou un autre caractère (#32).

h2. Build 27

* Permet d'ouvrir plusieurs univers dans des onglets (#42) :
  Il est maintenant possible d'ouvrir plusieurs univers dans des onglets séparés, ou même d'ouvrir le même univers plusieurs fois. Dans le menu fichier se trouve à présent trois options pour créer un univers, ouvrir un univers dans un onglet différent et fermer l'onglet actuel. Pour naviguer entre les onglets, utilisez Ctrl + tab et Ctrl + Shift + tab comme d'habitude.
  La fonctionnalité permettant de changer le titre de la fenêtre si des messages non lus sont reçus par le client (#20) prend maintenant en compte l'onglet sélectionné uniquement.
* Ajout de menus pour se déconnecter et se reconnecter à un univers (#43):
  Un nouveau menu dans la barre de menu, appelé connexion, permet de se déconnecter ou se reconnecter à l'univers actuellement sélectionné.
* Le client ne lag plus quand il essaye de se connecter à un serveur distant (#21).

h2. Build 26

* Quand l'utilisateur ne se trouve pas dans la fenêtre du client, si des messages sont reçus, le titre de la fenêtre change pour avertir l'utilisateur que des notifications l'attendent sur le client.

h2. Build 25

* Ajout de l'historique des commandes
  L'historique des commandes se souvient de chaque commande que vous avez entrée. Vous pouvez l'utiliser en appuyant sur CTRL + flèche haut ou bas pour naviguer dans vos commandes entrées. Vous pouvez aussi utiliser l'historique de commande en mode verrouillé. Pour ce faire, appuyez sur échappe. Vous pourrez ensuite naviguer dans l'historique en utilisant les flèches. Repassez en mode non-verrouillé en appuyant sur échappe de nouveau.
* Vous pouvez maintenant coller plusieurs lignes dans le client pour envoyer plusieurs commandes d'un coup (#27).

h2. Build 24

* Met à jour la documentation des fonctionnalités basiques (#36).
* Retire les options obsolètes se basant sur une zone d'entrée qui n'existe plus (#35).
* Quand un utilisateur appuie sur la touche de tabulation pour l'auto-complétion, le TTS prononce (et affiche) le résultat.

h2. Build 23

* Ajout de l'auto-complétion (#34):
  Quand le client reçoit des messages du serveur de jeu, tous les mots contenus dans ces messages sont classés par fréquence (du plus fréquent au moins fréquent). Si vous commencez à écrire une lettre ou plusieurs, puis appuyez sur la touche de tabulation, le client cherchera à finir le mot que vous aviez commencé à écrire. Si le résultat trouvé par le client ne vous convient pas, vous pouvez appuyer de nouveau sur la touche de tabulation jusqu'à trouver le mot que vous vouliez entrer.
